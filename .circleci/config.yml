# Reference used: https://circleci.com/docs/2.0/language-android
version: 2
jobs:
  build:
      working_directory: ~/code
      docker:
      - image: opendatakit/collect-build:1.0.0
      environment:
          # Least invasive change to resolve out-of-memory error: https://discuss.circleci.com/t/circle-ci-v2-and-android-memory-issues/11207/9
          _JAVA_OPTIONS: "-Xmx1024m"
      steps:
          - checkout
          - save_cache:
              key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
              paths: ~/code
          - restore_cache:
              key: jars-{{ checksum "build.gradle" }}-{{ checksum  "collect_app/build.gradle" }}
          - run:
              name: Accept licenses
              command: yes | sdkmanager --licenses || true
          - run:
              name: Download dependencies
              command: ./gradlew androidDependencies
          - save_cache:
              paths: ~/code/.gradle
              key: jars-{{ checksum "build.gradle" }}-{{ checksum  "collect_app/build.gradle" }}
          - run:
              name: Run checks and unit tests
              command: ./gradlew pmd checkstyle lint findbugs testDebugUnitTest
          - store_artifacts:
              path: collect_app/build/reports
              destination: reports
          - store_test_results:
              path: collect_app/build/test-results
          - run:
              name: Send codecov results
              command: bash <(curl -s https://codecov.io/bash)
          - run:
              name: Assemble debug and test builds
              command: |
                  ./gradlew :collect_app:assembleDebug -PdisablePreDex
                  ./gradlew :collect_app:assembleDebugAndroidTest -PdisablePreDex
          - run:
              name: Authorize gcloud
              command: |
                  if [[ "$CIRCLE_PROJECT_USERNAME" == "opendatakit" && "$CIRCLE_BRANCH" == "master" ]]; then \
                    sudo gcloud config set project api-project-322300403941;
                    echo $GCLOUD_SERVICE_KEY | base64 --decode > ~/client-secret.json;
                    sudo gcloud auth activate-service-account --key-file ~/client-secret.json;
                  fi
          - run:
              name: Run integration tests
              # if the file fails to copy, it's likely because --abbrev=9 doesn't match the
              # real hash length anymore.
              command: |
                  if [[ "$CIRCLE_PROJECT_USERNAME" == "opendatakit" && "$CIRCLE_BRANCH" == "master" ]]; then \
                    echo "y" | sudo gcloud firebase test android run \
                    --app collect_app/build/outputs/apk/collect-debug-$(git describe --tags --dirty --always --abbrev=9).apk \
                    --test collect_app/build/outputs/apk/collect_app-debug-androidTest.apk \
                    --device model=Nexus5,version=21,locale=en,orientation=portrait \
                    --results-bucket opendatakit-collect-test-results; \
                  fi
          - run:
              name: Copy integration test results
              command: |
                  if [[ "$CIRCLE_PROJECT_USERNAME" == "opendatakit" && "$CIRCLE_BRANCH" == "master" ]]; then \
                    mkdir ~/test-results;
                    sudo easy_install -U pip && sudo pip uninstall -y crcmod && sudo pip install -U crcmod;
                    sudo gsutil -m cp -r -U `sudo gsutil ls gs://opendatakit-collect-test-results | tail -1` ~/test-results | true;
                  fi
          - store_test_results:
              path: ~/test-results
